{
    "info": {
        "title": "Connect Suite API ",
        "version": "1.0.0",
        "description": "This API provides access to the gateway database and its adapters, devices and spawned errors."
    },
    "host": "10.8.0.10",
    "basePath": "/api/v1",
    "schemes": [
        "https"
    ],
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic"
        }
    },
    "swagger": "2.0",
    "paths": {
        "/device-image/{filename}": {
            "get": {
                "tags": [
                    "device"
                ],
                "description": "Get device image",
                "parameters": [
                    {
                        "$ref": "#/parameters/Filename"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/devices": {
            "get": {
                "tags": [
                    "device"
                ],
                "description": "Serves a list of devices",
                "parameters": [
                    {
                        "$ref": "#/parameters/Limit"
                    },
                    {
                        "$ref": "#/parameters/Offset"
                    },
                    {
                        "$ref": "#/parameters/Properties"
                    },
                    {
                        "$ref": "#/parameters/Filter"
                    },
                    {
                        "$ref": "#/parameters/Group"
                    },
                    {
                        "$ref": "#/parameters/Count"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/devices/{id}/data/{group}": {
            "get": {
                "tags": [
                    "device"
                ],
                "description": "Get device ISDU information",
                "parameters": [
                    {
                        "$ref": "#/parameters/ID"
                    },
                    {
                        "$ref": "#/parameters/Limit"
                    },
                    {
                        "$ref": "#/parameters/Offset"
                    },
                    {
                        "$ref": "#/parameters/Properties"
                    },
                    {
                        "$ref": "#/parameters/Filter"
                    },
                    {
                        "$ref": "#/parameters/Group"
                    },
                    {
                        "$ref": "#/parameters/DataGroup"
                    },
                    {
                        "$ref": "#/parameters/Grouping"
                    },
                    {
                        "$ref": "#/parameters/Count"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/devices/{id}/epc-config": {
            "get": {
                "tags": [
                    "device"
                ],
                "description": "Get device EPC Config",
                "parameters": [
                    {
                        "$ref": "#/parameters/ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/devices/{id}/epc": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/ID"
                    },
                    {
                        "$ref": "#/parameters/EPCRangeStart"
                    },
                    {
                        "$ref": "#/parameters/EPCRangeEnd"
                    },
                    {
                        "$ref": "#/parameters/EPCProperties"
                    },
                    {
                        "$ref": "#/parameters/EPCSamples"
                    },
                    {
                        "$ref": "#/parameters/EPCSource"
                    }
                ],
                "tags": [
                    "device"
                ],
                "description": "XXXX",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/devices/{id}/parameter/{index}": {
            "post": {
                "tags": [
                    "device"
                ],
                "description": "Send a command to the device",
                "parameters": [
                    {
                        "$ref": "#/parameters/ID"
                    },
                    {
                        "$ref": "#/parameters/Index"
                    }
                ]
            },
            "put": {
                "tags": [
                    "device"
                ],
                "description": "Update a device parameter index value",
                "parameters": [
                    {
                        "$ref": "#/parameters/ID"
                    },
                    {
                        "$ref": "#/parameters/Index"
                    }
                ]
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "event"
                ],
                "description": "Serves a list of events",
                "parameters": [
                    {
                        "$ref": "#/parameters/Limit"
                    },
                    {
                        "$ref": "#/parameters/Offset"
                    },
                    {
                        "$ref": "#/parameters/Properties"
                    },
                    {
                        "$ref": "#/parameters/Filter"
                    },
                    {
                        "$ref": "#/parameters/Group"
                    },
                    {
                        "$ref": "#/parameters/Count"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/OK"
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "tags": [
                    "event"
                ],
                "description": "Get a single event",
                "parameters": [
                    {
                        "$ref": "#/parameters/ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/guidds/{id}": {
            "get": {
                "tags": [
                    "guidd"
                ],
                "description": "Get the JSON contents of a guidd",
                "parameters": [
                    {
                        "$ref": "#/parameters/ID"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/hardware": {
            "get": {
                "tags": [
                    "hardware"
                ],
                "description": "Hardware",
                "parameters": [
                    {
                        "$ref": "#/parameters/Limit"
                    },
                    {
                        "$ref": "#/parameters/Offset"
                    },
                    {
                        "$ref": "#/parameters/Properties"
                    },
                    {
                        "$ref": "#/parameters/Filter"
                    },
                    {
                        "$ref": "#/parameters/Group"
                    },
                    {
                        "$ref": "#/parameters/Count"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/vendors": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/Order"
                    }
                ],
                "tags": [
                    "vendors"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Vendor"
                        }
                    }
                }
            }
        },
        "/vendors/device-count": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Vendor"
                        }
                    }
                }
            }
        },
        "/version/{tag}": {}
    },
    "definitions": {
        "ID": {
            "type": "number",
            "description": "Unique identifier for the resource"
        },
        "MainDevice": {
            "type": "object",
            "properties": {
                "ID": {
                    "$ref": "#/definitions/ID"
                }
            }
        },
        "postMainDevice": {
            "type": "object",
            "required": [
                "ClassesID"
            ],
            "properties": {
                "Active": {
                    "type": "boolean"
                },
                "AddAddress": {
                    "type": "string"
                },
                "AllowCommands": {
                    "type": "boolean"
                },
                "AllowEPC": {
                    "type": "boolean"
                },
                "AllowEvent": {
                    "type": "boolean"
                },
                "AllowISDUwr": {
                    "type": "boolean"
                },
                "AllowPDOut": {
                    "type": "boolean"
                },
                "AssetID": {
                    "type": "string"
                },
                "ClassesID": {
                    "type": "integer"
                },
                "CycleAwareness": {
                    "type": "boolean"
                },
                "IOName": {
                    "type": "string"
                },
                "IPAddress": {
                    "type": "string"
                },
                "InterfaceName": {
                    "type": "string"
                },
                "LocationPos": {
                    "type": "string"
                },
                "LocationTag": {
                    "type": "string"
                },
                "MAC": {
                    "type": "string"
                },
                "minSamplingRate": {
                    "type": "integer"
                },
                "MqttProtocol": {
                    "type": "string"
                },
                "Port": {
                    "type": "integer"
                },
                "Protocol": {
                    "type": "string"
                },
                "SSLTLS": {
                    "type": "boolean"
                },
                "Subinterfaces": {
                    "type": "string"
                }
            }
        },
        "putMainDevice": {
            "type": "object",
            "properties": {
                "Active": {
                    "type": "boolean"
                },
                "AddAddress": {
                    "type": "string"
                },
                "AllowCommands": {
                    "type": "boolean"
                },
                "AllowEPC": {
                    "type": "boolean"
                },
                "AllowEvent": {
                    "type": "boolean"
                },
                "AllowISDUwr": {
                    "type": "boolean"
                },
                "AllowPDOut": {
                    "type": "boolean"
                },
                "AssetID": {
                    "type": "string"
                },
                "CycleAwareness": {
                    "type": "boolean"
                },
                "IOName": {
                    "type": "string"
                },
                "IPAddress": {
                    "type": "string"
                },
                "InterfaceName": {
                    "type": "string"
                },
                "LocationPos": {
                    "type": "string"
                },
                "LocationTag": {
                    "type": "string"
                },
                "MAC": {
                    "type": "string"
                },
                "minSamplingRate": {
                    "type": "integer"
                },
                "MqttProtocol": {
                    "type": "string"
                },
                "Port": {
                    "type": "integer"
                },
                "Protocol": {
                    "type": "string"
                },
                "SSLTLS": {
                    "type": "boolean"
                },
                "Subinterfaces": {
                    "type": "string"
                }
            }
        },
        "Device": {
            "type": "object",
            "properties": {
                "UniqueID": {
                    "type": "string"
                },
                "InterfaceID": {
                    "type": "integer"
                },
                "Subinterface": {
                    "type": "string"
                },
                "ConnectionState": {
                    "type": "boolean"
                },
                "IODD": {
                    "type": "string"
                },
                "GUIDD": {
                    "type": "string"
                },
                "CommunicationInterfaceID": {
                    "type": "integer"
                },
                "VendorID": {
                    "type": "integer"
                },
                "DeviceID": {
                    "type": "integer"
                },
                "ProductID": {
                    "type": "string"
                },
                "SerialNumber": {
                    "type": "integer"
                },
                "LocationTag": {
                    "type": "string"
                },
                "LocationPos": {
                    "type": "string"
                },
                "AssetID": {
                    "type": "string"
                },
                "ShortName": {
                    "type": "string"
                },
                "QRCode": {
                    "type": "string"
                },
                "QRCodePicName": {
                    "type": "string"
                },
                "PictureName": {
                    "type": "string"
                },
                "IconName": {
                    "type": "string"
                },
                "DocumentationNames": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "DeviceType": {
                    "type": "string"
                },
                "DeviceSubType": {
                    "type": "string"
                }
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Cause": {
                    "type": "string"
                },
                "Impact": {
                    "type": "string"
                },
                "Solution": {
                    "type": "string"
                }
            }
        },
        "Vendor": {
            "type": "object",
            "properties": {
                "VendorID": {
                    "type": "integer"
                },
                "VendorName": {
                    "type": "string"
                },
                "VendorText": {
                    "type": "string"
                },
                "VendorURL": {
                    "type": "string"
                },
                "VendorLogo": {
                    "type": "string"
                },
                "DeviceCount": {
                    "type": "integer"
                }
            }
        }
    },
    "responses": {
        "OK": {
            "description": "OK"
        },
        "NotFoundError": {
            "description": "The required entity was not found"
        },
        "BadRequestError": {
            "description": "The required entity was not found"
        }
    },
    "parameters": {
        "Force": {
            "name": "force",
            "description": "Unlocks a locked process - use with caution",
            "in": "query",
            "type": "boolean"
        },
        "Timeout": {
            "name": "timeout",
            "description": "Defines maximum runtime for process",
            "in": "query",
            "type": "integer"
        },
        "Limit": {
            "name": "limit",
            "description": "Defines how many items to fetch",
            "in": "query",
            "type": "integer",
            "default": 10
        },
        "Offset": {
            "name": "offset",
            "description": "For pagination, define offset of items to fetch from",
            "in": "query",
            "type": "integer",
            "default": 0
        },
        "Properties": {
            "name": "properties",
            "description": "Define which properties to include in each item. The format is comma separated.",
            "in": "query",
            "type": "string"
        },
        "Group": {
            "name": "group",
            "description": "Define by what property to group the result by.\nThis makes the resulting items an object instead of an array.\nIf multiple properties are listed, the result is nest-grouped,\nwith each level down in the object mapping to the corresponding nth group parameter.\n",
            "in": "query",
            "type": "string"
        },
        "Filter": {
            "name": "filter",
            "description": "Define a filter criteria based on fields and values",
            "in": "query",
            "type": "string",
            "default": ""
        },
        "Grouping": {
            "name": "grouping",
            "in": "query",
            "allowEmptyValue": true,
            "description": "Get the data as nested object based on a built-in preset",
            "type": "boolean",
            "required": false,
            "default": false
        },
        "Count": {
            "name": "count",
            "in": "query",
            "allowEmptyValue": true,
            "description": "Count the found items rather than returning the data objects",
            "type": "boolean",
            "required": false,
            "default": false
        },
        "VersionStart": {
            "name": "start",
            "description": "Define first version to fetch",
            "in": "query",
            "type": "integer",
            "required": true
        },
        "VersionEnd": {
            "name": "end",
            "description": "Define last version to fetch",
            "in": "query",
            "type": "integer",
            "required": true
        },
        "VersionID": {
            "name": "BuildID",
            "description": "Build Number",
            "in": "path",
            "type": "integer",
            "required": true
        },
        "DeviceClassID": {
            "in": "formData",
            "type": "integer",
            "required": false,
            "name": "DeviceClassID"
        },
        "MainDeviceActive": {
            "in": "formData",
            "type": "boolean",
            "required": false,
            "name": "Active"
        },
        "MainDeviceAddAddress": {
            "in": "formData",
            "type": "string",
            "required": false,
            "name": "AddAddress"
        },
        "MainDeviceAllowCommands": {
            "in": "formData",
            "type": "boolean",
            "required": false,
            "name": "AllowCommands"
        },
        "MainDeviceAllowEPC": {
            "in": "formData",
            "type": "boolean",
            "required": false,
            "name": "AllowEPC"
        },
        "MainDeviceAllowEvent": {
            "in": "formData",
            "type": "boolean",
            "required": false,
            "name": "AllowEvent"
        },
        "MainDeviceAllowISDUwr": {
            "in": "formData",
            "type": "boolean",
            "required": false,
            "name": "AllowISDUwr"
        },
        "MainDeviceAllowPDOut": {
            "in": "formData",
            "type": "boolean",
            "required": false,
            "name": "AllowPDOut"
        },
        "MainDeviceAssetID": {
            "in": "formData",
            "type": "string",
            "required": false,
            "name": "AssetID"
        },
        "MainDeviceClassesID": {
            "in": "formData",
            "type": "integer",
            "required": true,
            "name": "ClassesID"
        },
        "MainDeviceCycleAwareness": {
            "in": "formData",
            "type": "boolean",
            "required": false,
            "name": "CycleAwareness"
        },
        "MainDeviceIOName": {
            "in": "formData",
            "type": "string",
            "required": false,
            "name": "IOName"
        },
        "MainDeviceIPAddress": {
            "in": "formData",
            "type": "string",
            "required": true,
            "name": "IPAddress"
        },
        "MainDeviceInterfaceName": {
            "in": "formData",
            "type": "string",
            "required": false,
            "name": "InterfaceName"
        },
        "MainDeviceLocationPos": {
            "in": "formData",
            "type": "string",
            "required": false,
            "name": "LocationPos"
        },
        "MainDeviceLocationTag": {
            "in": "formData",
            "type": "string",
            "required": false,
            "name": "LocationTag"
        },
        "MainDeviceMAC": {
            "in": "formData",
            "type": "string",
            "required": false,
            "name": "MAC"
        },
        "MainDeviceminSamplingRate": {
            "in": "formData",
            "type": "integer",
            "required": false,
            "name": "minSamplingRate"
        },
        "MainDeviceMqttProtocol": {
            "in": "formData",
            "type": "string",
            "required": false,
            "name": "MqttProtocol"
        },
        "MainDevicePort": {
            "in": "formData",
            "type": "integer",
            "required": false,
            "name": "Port"
        },
        "MainDeviceProtocol": {
            "in": "formData",
            "type": "string",
            "required": false,
            "name": "Protocol"
        },
        "MainDeviceSSLTLS": {
            "in": "formData",
            "type": "boolean",
            "required": false,
            "name": "SSLTLS"
        },
        "MainDeviceSubinterfaces": {
            "in": "formData",
            "type": "string",
            "required": false,
            "name": "Subinterfaces"
        },
        "Code": {
            "name": "Code",
            "in": "path",
            "description": "Errorcode of the event",
            "required": true,
            "type": "integer"
        },
        "IPAddress": {
            "name": "address",
            "in": "query",
            "description": "An ipv4 address",
            "type": "string"
        },
        "Order": {
            "name": "order",
            "type": "string",
            "in": "query"
        },
        "MainDeviceColumn": {
            "name": "Column",
            "in": "path",
            "description": "Single column to fetch from IO_MainDevices table",
            "required": true,
            "type": "string",
            "enum": [
                "InterfaceID",
                "InterfaceName",
                "Protocol",
                "Subinterface",
                "SSLTLS",
                "MAC",
                "IPAddress",
                "Port",
                "AddAddress",
                "IOName",
                "Active",
                "MqttProtocol",
                "AllowPDOut",
                "AllowCommands",
                "AllowISDUwr",
                "CycleAwareness",
                "Vendor",
                "ProductName",
                "OrderCode",
                "SerialNumber",
                "AssetID",
                "LocationTag",
                "LocationPos",
                "ImagePath",
                "ConfigurationFile"
            ]
        },
        "Column": {
            "name": "Column",
            "in": "path",
            "required": true,
            "type": "string"
        },
        "ColumnOrQuantity": {
            "name": "ColumnOrQuantity",
            "in": "path",
            "description": "ColumnOrQuantity",
            "required": true,
            "type": "string"
        },
        "ColumnOrSubitemOrQuantity": {
            "name": "ColumnOrSubitemOrQuantity",
            "in": "path",
            "description": "ColumnOrSubitemOrQuantity",
            "required": true,
            "type": "string"
        },
        "MainDeviceName": {
            "name": "MainDeviceName",
            "in": "path",
            "description": "string with the columns **IOName** and **InterfaceID**",
            "required": true,
            "type": "string",
            "default": "8_Balluff"
        },
        "MainDeviceBody": {
            "name": "MainDevice",
            "in": "body",
            "description": "MainDevice object to create",
            "required": true,
            "schema": {
                "$ref": "#/definitions/MainDevice"
            }
        },
        "DeviceBody": {
            "name": "device",
            "in": "body",
            "description": "Device object",
            "required": true,
            "schema": {
                "$ref": "#/definitions/Device"
            }
        },
        "MainDeviceConfigFileUploadBody": {
            "in": "formData",
            "name": "ConfigurationFile",
            "type": "file",
            "description": "sdd or iodd config file for the MainDevice"
        },
        "DeviceID": {
            "name": "DeviceID",
            "in": "path",
            "description": "ID of the device",
            "required": true,
            "type": "integer"
        },
        "Filename": {
            "name": "Filename",
            "description": "A filename",
            "in": "path",
            "required": true,
            "type": "string"
        },
        "ID": {
            "name": "ID",
            "description": "A unique ID identifying the item",
            "in": "path",
            "required": true,
            "type": "integer"
        },
        "Index": {
            "name": "index",
            "description": "Device Parameter Index",
            "in": "path",
            "required": true,
            "type": "string"
        },
        "Pathname": {
            "name": "pathname",
            "description": "pathname to identify an app",
            "in": "path",
            "required": true,
            "type": "string"
        },
        "DataGroup": {
            "name": "Group",
            "in": "path",
            "description": "might have the following values according to the name of the tables in the databases:\n* **DeviceControl**\n* **ISDU_Identification**\n* **ISDU_Parameter**\n* **ISDU_Observation**\n* **ISDU_Diagnosis**\n* **ProcessData**\n* **EPC**\n",
            "required": true,
            "type": "string",
            "enum": [
                "DeviceControl",
                "ISDU_Identification",
                "ISDU_Parameter",
                "ISDU_Observation",
                "ISDU_Diagnosis",
                "ProcessData",
                "EPC"
            ]
        },
        "InterfaceID": {
            "name": "InterfaceID",
            "in": "path",
            "description": "InterfaceID",
            "required": true,
            "type": "integer"
        },
        "LocationTag": {
            "name": "LocationTag",
            "in": "path",
            "description": "LocationTag",
            "required": true,
            "type": "string",
            "default": "UndefinedTag"
        },
        "LocationPos": {
            "name": "LocationPos",
            "in": "path",
            "description": "LocationPos",
            "required": true,
            "type": "string",
            "default": "UndefinedPos"
        },
        "AssetID": {
            "name": "AssetID",
            "in": "path",
            "description": "Unique **AssetID** - consists out of `ProductID-VendorID-DeviceID-SerialNumber`",
            "type": "string",
            "required": true
        },
        "QueryLocationTag": {
            "name": "LocationTag",
            "in": "query",
            "description": "LocationTag",
            "required": true,
            "type": "string",
            "default": "UndefinedTag"
        },
        "QueryLocationPos": {
            "name": "LocationPos",
            "in": "query",
            "description": "LocationPos",
            "required": true,
            "type": "string",
            "default": "UndefinedPos"
        },
        "QueryAssetID": {
            "name": "AssetID",
            "in": "query",
            "description": "Unique **AssetID** - consists out of `ProductID-VendorID-DeviceID-SerialNumber`",
            "type": "string"
        },
        "NoEPP": {
            "name": "NoEPP",
            "in": "path",
            "description": "Number of **Entries** / **Page**",
            "required": true,
            "type": "integer",
            "default": 10
        },
        "Page": {
            "name": "Page",
            "in": "path",
            "description": "Page",
            "required": true,
            "type": "string"
        },
        "ParamName": {
            "name": "ParamName",
            "in": "path",
            "description": "ParamName",
            "required": true,
            "type": "string"
        },
        "CommunicationInterfaceID": {
            "name": "CommunicationInterfaceID",
            "in": "path",
            "description": "CommunicationInterfaceID",
            "required": true,
            "type": "integer"
        },
        "ShortName": {
            "name": "ShortName",
            "in": "path",
            "description": "ShortName",
            "required": true,
            "type": "string"
        },
        "Subinterface": {
            "name": "Subinterface",
            "in": "path",
            "description": "Subinterface",
            "required": true,
            "type": "string"
        },
        "SubitemOrColumn": {
            "name": "SubitemOrColumn",
            "in": "path",
            "description": "SubitemOrColumn",
            "required": true,
            "type": "string"
        },
        "TimeRange": {
            "name": "TimeRange",
            "in": "path",
            "description": "**TimeRange** is a string with a character and a number `[x]` afterwards:\n* `mi[x]` ( get all entries within the last `x` **minute/s** )\n* `h[x]` ( get all entries within the last `x` **hour/s** )\n* `d[x]` ( get all entries within the last `x` **day/s** )\n* `w[x]` ( get all entries within the last `x` **weak/s** )\n* `m[x]` ( get all entries within the last `x` **month/s** )\n* `y[x]` ( get all entries within the last `x` **year/s** )\n* all ( referring to all entries of the DB)\n",
            "required": true,
            "type": "string"
        },
        "TimestampAPPEARS": {
            "name": "TimestampAPPEARS",
            "in": "path",
            "description": "TimestampAPPEARS",
            "required": true,
            "type": "string"
        },
        "Type": {
            "name": "Type",
            "in": "path",
            "description": "Type",
            "required": true,
            "type": "string",
            "enum": [
                "Error",
                "Warning",
                "Notification",
                "Message"
            ]
        },
        "UniqueID": {
            "name": "UniqueID",
            "in": "path",
            "description": "Consists of VendorID-DeviceID-Identifier. Where Identifier is either one of Serialnumber or Interface_Subinterface",
            "required": true,
            "type": "string"
        },
        "VendorID": {
            "name": "VendorID",
            "in": "path",
            "description": "VendorID",
            "required": true,
            "type": "integer"
        },
        "EPCRangeStart": {
            "name": "rangeStart",
            "in": "query",
            "description": "Defines the start of the range to search for samples",
            "type": "integer"
        },
        "EPCRangeEnd": {
            "name": "rangeEnd",
            "in": "query",
            "description": "Defines the end of the range to search for samples",
            "type": "integer"
        },
        "EPCRangeType": {
            "name": "rangeType",
            "in": "query",
            "description": "Type of range to use with range",
            "required": true,
            "type": "string",
            "enum": [
                "cycles",
                "time"
            ]
        },
        "EPCProperties": {
            "name": "properties",
            "in": "query",
            "description": "A list of properties to ask for. If empty, all properties will be returned\nThe list is comma separated. A list of properties can be retrieved via the EPCConfig Table (not exposed via API)\n",
            "type": "string"
        },
        "EPCSamples": {
            "name": "samples",
            "in": "query",
            "description": "Defines how many samples to return, evenly spreaded across the required `range`.\nThe default is `2`.\n",
            "type": "integer"
        },
        "EPCSource": {
            "name": "source",
            "in": "query",
            "description": "Define from which sources the epc data is aggregated from.\nBy default, all sources are used, but can be specified with a comma separated list.\n",
            "type": "string"
        }
    },
    "tags": [
        {
            "name": "device",
            "description": "A device is an OT unit emitting ProcessData, Events and EPC Data"
        },
        {
            "name": "event",
            "description": "Events are spawned by devices and have code, timestamp and severity"
        },
        {
            "name": "guidd",
            "description": "A GUIDD is a device description file for the user interface"
        },
        {
            "name": "hardware",
            "description": "Subdevices and Maindevices merged in one view"
        }
    ]
}
